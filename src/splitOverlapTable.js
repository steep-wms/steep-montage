#!/usr/bin/env node

// This program parses a table generated by mOverlaps and splits it into
// multiple files (one file per row). Each file contains four lines representing
// the 'cntr1' and 'cntr2' values from the input file and the names of an
// overlapping FITS file pair.
//
// Usage: ./splitOverlapTable.js <inputOverlapsFile.tbl> <targetDirectory>

const fs = require("fs");
const path = require("path");
const readline = require("readline");

if (process.argv.length < 4) {
  console.error("Usage: ./splitOverlapTable.js <inputOverlapsFile.tbl> <targetDirectory>")
  process.exit(1);
}

let input = process.argv[2];
let target = process.argv[3];

function parseHeader(line) {
  let header = [];
  cols = line.split("|");
  for (let i = 1; i < cols.length - 1; ++i) {
    let name = cols[i];
    header.push({
      name: name.trim(),
      width: name.length
    });
  }
  return header;
}

function parseLine(line, header) {
  let values = {};
  let pos = 1;
  for (let col of header) {
    let value = line.substring(pos, pos + col.width);
    values[col.name] = value.trim();
    pos += 1 + col.width;
  }
  return values;
}

async function main() {
  let header = [];
  let fileStream = fs.createReadStream(input);

  let rl = readline.createInterface({
    input: fileStream,
    crlfDelay: Infinity
  });

  for await (let line of rl) {
    if (header.length === 0) {
      header = parseHeader(line);
    } else if (line[0] !== "|") {
      let values = parseLine(line, header);
      let targetName = values["diff"].replace(/diff\.|\.fits/g, "") + ".txt";
      let content = values["cntr1"] + "\n" + values["cntr2"] + "\n" +
          values["plus"] + "\n" + values["minus"] + "\n";
      await fs.promises.writeFile(path.join(target, targetName), content);
    }
  }
}

main().catch(err => {
  console.error(err);
  process.exit(1);
});
